{"ast":null,"code":"import _asyncToGenerator from \"/home/osm/Bureau/location/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n// import\nimport { OpenStreetMapProvider, GeoSearchControl } from 'leaflet-geosearch';\nimport * as L from 'leaflet';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/data.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/button\";\nconst _c0 = [\"myInput\"];\nconst provider = new OpenStreetMapProvider();\nconst searchControl = GeoSearchControl({\n  provider: provider\n}); // import Geocoder from 'leaflet-control-geocoder';\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(http, dataService) {\n      this.http = http;\n      this.dataService = dataService;\n      this.markers = [];\n      this.places = [];\n      this.fileName = '';\n      this.smallIcon = new L.Icon({\n        iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-icon.png',\n        iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-icon-2x.png',\n        iconSize: [20, 30],\n        iconAnchor: [6, 10],\n        popupAnchor: [0, -10],\n        shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',\n        shadowSize: [10, 10]\n      });\n      this.locations = [];\n    }\n\n    ngAfterViewInit() {\n      this.createMap();\n    }\n\n    createMap() {\n      this.map = L.map('mapAddress').setView([0, 0], 3);\n      const mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        minZoom: 1,\n        maxZoom: 20,\n        attribution: 'OSM'\n      });\n      mainLayer.addTo(this.map);\n      const Stadia_AlidadeSmooth = L.tileLayer('https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png', {\n        maxZoom: 20,\n        attribution: '&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\n      });\n      const OpenStreetMap_France = L.tileLayer('https://{s}.tile.openstreetmap.fr/osmfr/{z}/{x}/{y}.png', {\n        maxZoom: 20,\n        attribution: '&copy; OpenStreetMap France | &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      });\n      const OpenTopoMap = L.tileLayer('https://{s}.tile.opentopomap.org/{z}/{x}/{y}.png', {\n        maxZoom: 17,\n        attribution: 'Map data: &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors, <a href=\"http://viewfinderpanoramas.org\">SRTM</a> | Map style: &copy; <a href=\"https://opentopomap.org\">OpenTopoMap</a> (<a href=\"https://creativecommons.org/licenses/by-sa/3.0/\">CC-BY-SA</a>)'\n      });\n      const Esri_WorldImagery = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}', {\n        attribution: 'Tiles &copy; Esri &mdash; Source: Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community'\n      });\n      const Esri_NatGeoWorldMap = L.tileLayer('https://server.arcgisonline.com/ArcGIS/rest/services/NatGeo_World_Map/MapServer/tile/{z}/{y}/{x}', {\n        attribution: 'Tiles &copy; Esri &mdash; National Geographic, Esri, DeLorme, NAVTEQ, UNEP-WCMC, USGS, NASA, ESA, METI, NRCAN, GEBCO, NOAA, iPC',\n        maxZoom: 16\n      }); // leaflet layer control\n\n      const baseMaps = {\n        'Stadia_AlidadeSmooth': Stadia_AlidadeSmooth,\n        'OpenStreetMap_France': OpenStreetMap_France,\n        'OpenTopoMap': OpenTopoMap,\n        'Esri_WorldImagery': Esri_WorldImagery,\n        'Esri_NatGeoWorldMap': Esri_NatGeoWorldMap\n      };\n      var marker = L.markerClusterGroup();\n      const overlayMaps = {\n        'GeoJson Markers': marker\n      };\n      L.control.layers(baseMaps).addTo(this.map); // const GeocoderControl = new Geocoder();\n      // GeocoderControl.addTo(this.map);\n      // GeocoderControl.on('markgeocode', function (e) {\n      // \tconsole.log(e)\n      // })\n      // const geocoder = new Geocoder()\n      // geocoder.addTo(this.map)\n\n      this.map.addControl(searchControl);\n    }\n\n    findPlace(places) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (places.length > 0) {\n          places.map(place => {\n            provider.search({\n              query: place.word\n            }).then(res => {\n              console.log('res**  ', res);\n              res.map(r => _this.places.push(r));\n\n              _this.places.push(res);\n            }); // console.log('results  ',results);\n          });\n        }\n      })();\n    }\n\n    searchAddress() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        _this2.places = [];\n\n        if (_this2.markers.length > 0) {\n          _this2.markers.map(marker => _this2.map.removeLayer(marker));\n\n          console.log('delete');\n        } // this.markers = []\n\n\n        console.log(_this2.address); // search\n\n        if (_this2.address) {\n          const results = yield provider.search({\n            query: _this2.address\n          });\n          console.log('results', results); // results.map(location => {\n          // \tlet place = {\n          // \t\tlabel: location.label,\n          // \t\tlat:location.x,\n          // \t\tlng:location.y,\n          // \t}\n          // \tthis.places.push(place)\n          // \tthis.marker = L.marker([location.y, location.x], { icon: this.smallIcon })\n          // \tthis.marker.addTo(this.map).bindPopup(`<center><h3>${location.label}</h3>`)\n          // \tthis.markers.push(this.marker)\n          // })\n          // if (this.markers.length > 0) {\n          // \tconst group = L.featureGroup(this.markers);\n          // \tthis.map.fitBounds(group.getBounds(), { padding: [50, 50] });\n          // }\n        }\n\n        console.log('places **', _this2.places);\n        console.log('markers ', _this2.markers);\n      })();\n    }\n\n    sendText() {\n      this.http.get(`${environment.url_py}/text`, {\n        params: {\n          text: this.text\n        }\n      }).subscribe(res => {\n        this.locations = res;\n        this.locations = res.filter(location => {\n          return location.label === 'LOC';\n        });\n        console.log(this.locations); // this.findPlace(this.locations)\t\n      });\n    }\n\n    sendFile() {\n      if (this.file) {\n        const formData = new FormData();\n        formData.append('file', this.file, this.file.name);\n        this.dataService.sendFile(formData).subscribe(res => console.log('sent success'));\n      }\n    } // fileUpload(e) {\n    // \tthis.file = e.target.files[0];\n    // \tlet fileReader = new FileReader();\n    // \tfileReader.onload = () => {\n    // \t\tthis.text = fileReader.result as string\n    // \t}\n    // \tfileReader.readAsText(this.file);\n    // }\n    // dataURItoBlob(base64: any) {\n    // \tlet binary = atob(base64.split(',')[1]);\n    // \tlet array = [];\n    // \tfor (let i = 0; i < binary.length; i++) {\n    // \t\tarray.push(binary.charCodeAt(i));\n    // \t}\n    // \treturn new Blob([new Uint8Array(array)], { type: 'text' });\n    // }\n\n\n    onFileSelected(event) {\n      const file = event.target.files[0];\n\n      if (file) {\n        this.fileName = file.name;\n        const formData = new FormData();\n        formData.append(\"name\", file.name);\n        formData.append(\"file\", file, file.name);\n        this.http.post(`${environment.url_py}/file`, formData).subscribe(res => {\n          console.log(res);\n        });\n      }\n    }\n\n    clearText() {\n      this.text = \"\";\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DataService));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    viewQuery: function HomeComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.myInputVariable = _t.first);\n      }\n    },\n    decls: 23,\n    vars: 2,\n    consts: [[1, \"container\"], [1, \"enter-text\"], [1, \"text-area\"], [\"placeholder\", \"Enter the text...\", \"rows\", \"5\", 3, \"ngModel\", \"ngModelChange\"], [1, \"dropzone\"], [\"type\", \"file\", \"accept\", \".txt,.zip\", \"id\", \"fileDropReff\", 3, \"change\"], [\"myInput\", \"\"], [\"for\", \"fileDropReff\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"m-1\", 3, \"click\"], [\"type\", \"text\", \"placeholder\", \"Enter the address...\", 1, \"m-1\", 3, \"ngModel\", \"ngModelChange\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", 1, \"m-1\", 3, \"click\"], [\"id\", \"mapAddress\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"textarea\", 3);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_textarea_ngModelChange_3_listener($event) {\n          return ctx.text = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"input\", 5, 6);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_5_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"h3\");\n        i0.ɵɵtext(8, \"Drag and drop file here or\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10, \" \\u00A0\");\n        i0.ɵɵelementStart(11, \"strong\");\n        i0.ɵɵtext(12, \"Browse for file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_13_listener() {\n          return ctx.sendText();\n        });\n        i0.ɵɵtext(14, \"Send Text\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_15_listener() {\n          return ctx.sendFile();\n        });\n        i0.ɵɵtext(16, \"Send File\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"input\", 9);\n        i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_Template_input_ngModelChange_17_listener($event) {\n          return ctx.address = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_18_listener() {\n          return ctx.searchAddress();\n        });\n        i0.ɵɵtext(19, \"Search\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_20_listener() {\n          return ctx.clearText();\n        });\n        i0.ɵɵtext(21, \"Clear\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"div\", 11);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.text);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngModel\", ctx.address);\n      }\n    },\n    directives: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.MatButton],\n    styles: [\"#mapAddress[_ngcontent-%COMP%]{width:100%;height:60vh;margin-bottom:15px;margin-top:15px;position:relative}.enter-text[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:space-between;width:100%}.text-area[_ngcontent-%COMP%]{width:74%}textarea[_ngcontent-%COMP%]{width:100%;padding:10px;height:150px;border:none;box-shadow:#fff3 0 0 0 1px inset,#000000e6 0 0 0 1px;margin-bottom:10px}.dropzone[_ngcontent-%COMP%]{width:24%;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;height:150px;background:rgb(241,241,239);box-shadow:#fcf8f833 0 0 0 1px inset,#000000e6 0 0 0 1px;margin-bottom:10px}#fileDropReff[_ngcontent-%COMP%]{opacity:0;position:absolute;z-index:2;width:80%;height:100%;top:0;left:0;cursor:pointer}h3[_ngcontent-%COMP%], label[_ngcontent-%COMP%]{padding:0;margin:0;font-size:16px}@media (max-width:1000px){.enter-text[_ngcontent-%COMP%]{flex-direction:column}.text-area[_ngcontent-%COMP%]{width:100%}textarea[_ngcontent-%COMP%]{height:200px}.dropzone[_ngcontent-%COMP%]{width:100%;margin:auto auto 10px;height:60px;flex-direction:row}}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}