{"ast":null,"code":"import * as L from 'leaflet';\nimport { environment } from 'src/environments/environment';\nimport { OpenStreetMapProvider, GeoSearchControl } from 'leaflet-geosearch';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/data.service\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/flex-layout/extended\";\nimport * as i8 from \"@angular/material/icon\";\nimport * as i9 from \"@angular-slider/ngx-slider\";\n\nfunction MapComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 20);\n  }\n}\n\nfunction MapComponent_div_12_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function MapComponent_div_12_button_4_Template_button_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.sendToSpacy($event);\n    });\n    i0.ɵɵtext(1, \"Cartographier\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MapComponent_div_12_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function MapComponent_div_12_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.clearText();\n    });\n    i0.ɵɵtext(1, \"Effacer\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MapComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"textarea\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function MapComponent_div_12_Template_textarea_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.text = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 23);\n    i0.ɵɵtemplate(4, MapComponent_div_12_button_4_Template, 2, 0, \"button\", 24);\n    i0.ɵɵtemplate(5, MapComponent_div_12_button_5_Template, 2, 0, \"button\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.text);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.textArea);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.textArea);\n  }\n}\n\nfunction MapComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"label\", 29);\n    i0.ɵɵelement(2, \"img\", 30);\n    i0.ɵɵelementStart(3, \"input\", 31, 32);\n    i0.ɵɵlistener(\"change\", function MapComponent_div_13_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.sendToSpacy($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h5\");\n    i0.ɵɵtext(6, \"Cliquez pour t\\u00E9l\\u00E9verser un fichier \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h5\");\n    i0.ɵɵtext(8, \"(type txt ou zip, taille maximale: 100 ko) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h4\", 33);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(10);\n    i0.ɵɵtextInterpolate(ctx_r2.fileName);\n  }\n}\n\nfunction MapComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 20);\n  }\n}\n\nfunction MapComponent_div_18_Div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"Div\");\n    i0.ɵɵelementStart(1, \"label\", 39);\n    i0.ɵɵelementStart(2, \"input\", 40);\n    i0.ɵɵlistener(\"click\", function MapComponent_div_18_Div_4_Template_input_click_2_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const location_r22 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.confirmLocation($event, location_r22.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 41);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const location_r22 = ctx.$implicit;\n    const i_r23 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"for\", \"checkbox\", i_r23, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"checkbox\", i_r23, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", location_r22.city, \" \", location_r22.country, \"\");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"rounded height2\": a0,\n    \"rounded height1\": a1\n  };\n};\n\nfunction MapComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"h3\", 35);\n    i0.ɵɵtext(2, \"Lieux dupliqu\\u00E9s\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 36);\n    i0.ɵɵtemplate(4, MapComponent_div_18_Div_4_Template, 5, 4, \"Div\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function MapComponent_div_18_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r27);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.displayOnMap();\n    });\n    i0.ɵɵtext(6, \"Afficher sur la carte\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r4.textArea, !ctx_r4.textArea));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.duplicatedCities);\n  }\n}\n\nfunction MapComponent_div_19_Div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"Div\", 44);\n    i0.ɵɵelementStart(1, \"span\", 45);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const location_r29 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(location_r29.city);\n  }\n}\n\nfunction MapComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 42);\n    i0.ɵɵelementStart(1, \"h3\", 35);\n    i0.ɵɵtext(2, \"non reconnus\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 36);\n    i0.ɵɵtemplate(4, MapComponent_div_19_Div_4_Template, 3, 1, \"Div\", 43);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r5.textArea, !ctx_r5.textArea));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.notFoundCities);\n  }\n}\n\nfunction MapComponent_button_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function MapComponent_button_22_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.onSelectText(ctx_r30.textSelected);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \" my_location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MapComponent_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function MapComponent_button_23_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r33);\n      const ctx_r32 = i0.ɵɵnextContext();\n      return ctx_r32.onSelectDate(ctx_r32.dateSelected);\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \" my_location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MapComponent_button_24_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function MapComponent_button_24_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r35);\n      const ctx_r34 = i0.ɵɵnextContext();\n      return ctx_r34.displayOnMap();\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \" my_location\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction MapComponent_div_25_div_2_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r41 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 53);\n    i0.ɵɵlistener(\"click\", function MapComponent_div_25_div_2_button_1_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r41);\n      const item_r39 = restoredCtx.$implicit;\n      const ctx_r40 = i0.ɵɵnextContext(3);\n      return ctx_r40.onSelectText(item_r39.legend);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r39 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r39.legend, \" \");\n  }\n}\n\nfunction MapComponent_div_25_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 51);\n    i0.ɵɵtemplate(1, MapComponent_div_25_div_2_button_1_Template, 2, 1, \"button\", 52);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r36.listOfText);\n  }\n}\n\nfunction MapComponent_div_25_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ngx-slider\", 54);\n    i0.ɵɵlistener(\"valueChange\", function MapComponent_div_25_div_3_Template_ngx_slider_valueChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r42 = i0.ɵɵnextContext(2);\n      return ctx_r42.value = $event;\n    })(\"ngModelChange\", function MapComponent_div_25_div_3_Template_ngx_slider_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r44 = i0.ɵɵnextContext(2);\n      return ctx_r44.dateSelected = $event;\n    })(\"mouseup\", function MapComponent_div_25_div_3_Template_ngx_slider_mouseup_1_listener() {\n      i0.ɵɵrestoreView(_r43);\n      const ctx_r45 = i0.ɵɵnextContext(2);\n      return ctx_r45.onSelectDate(ctx_r45.dateSelected);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r37 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", ctx_r37.value)(\"options\", ctx_r37.options)(\"ngModel\", ctx_r37.dateSelected);\n  }\n}\n\nfunction MapComponent_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 47);\n    i0.ɵɵelementStart(1, \"div\", 48);\n    i0.ɵɵtemplate(2, MapComponent_div_25_div_2_Template, 2, 1, \"div\", 49);\n    i0.ɵɵtemplate(3, MapComponent_div_25_div_3_Template, 2, 3, \"div\", 50);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.listOfText.length > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.textArea);\n  }\n}\n\nconst provider = new OpenStreetMapProvider();\nconst searchControl = GeoSearchControl({\n  provider: provider\n});\nexport let MapComponent = /*#__PURE__*/(() => {\n  class MapComponent {\n    constructor(dataService, http, router) {\n      this.dataService = dataService;\n      this.http = http;\n      this.router = router; // @ViewChild('myInput') myInputVariable: ElementRef;\n\n      this.value = 5;\n      this.options = {\n        showTicksValues: true,\n        stepsArray: [] // stepsArray: [\n        // \t{ value: 1 },\n        // \t{ value: 2 },\n        // \t{ value: 3},\n        // \t{ value: 4 },\n        // \t{ value: 5 },\n        // \t{ value: 6 },\n        // \t{ value: 7 },\n        // \t{ value: 8 },\n        // \t{ value: 9, legend: \"Excellent\" }\n        // ]\n\n      };\n      this.locations = [];\n      this.country = '';\n      this.countries = [];\n      this.coords = [];\n      this.markers = [];\n      this.loading = false;\n      this.foundCities = [];\n      this.notFoundCities = [];\n      this.duplicatedCities = [];\n      this.notDuplicatedCities = [];\n      this.allNotDuplicatedCities = [];\n      this.foundCountries = [];\n      this.cities = [];\n      this.ids = [];\n      this.places = [];\n      this.wordList = [];\n      this.fileName = '';\n      this.spacyList = [];\n      this.spacyText = \"\";\n      this.textArea = true;\n      this.listOfText = [];\n      this.listOfDate = [];\n      this.textSelected = \"\";\n      this.dateSelected = \"\";\n      this.allCities = [];\n      this.onCenter = false;\n      this.onCartographier = true;\n    }\n\n    ngAfterViewInit() {\n      this.dataService.getLocation().subscribe(res => {\n        this.locations = res;\n      });\n      this.dataService.getCountries().subscribe(res => {\n        this.countries = res;\n        this.loading = true;\n      });\n      this.createMap();\n    }\n\n    createMap(lat = 0, lng = 0, z = 2) {\n      this.map = L.map('map').setView([lat, lng], z);\n      this.mainLayer = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n        minZoom: 1,\n        maxZoom: 20,\n        attribution: 'OSM'\n      });\n      this.mainLayer.addTo(this.map);\n      this.map.addControl(searchControl);\n    } // geoJson(url: string, country: string) {\n    // \tthis.http.get(url).subscribe((res: any) => {\n    // \t\tthis.geojson = res\n    // \t\tthis.geojson = this.geojson.features.filter(data => data.properties['ADMIN'] === country)\n    // \t\tL.geoJSON(this.geojson).addTo(this.map)\n    // \t})\n    // }\n    // \n\n\n    onSelectTextArea(e) {\n      if (e.target.checked === true) {\n        this.textArea = true;\n        this.uploadFile = false;\n        this.onCartographier = true;\n      }\n\n      this.clearText();\n    }\n\n    onSelectUploadFile(e) {\n      this.clearText();\n\n      if (e.target.checked === true) {\n        this.textArea = false;\n        this.uploadFile = true;\n      }\n    } // Vider le textarea\n\n\n    clearText() {\n      this.duplicatedCities = [];\n      this.notFoundCities = [];\n      this.foundCities = [];\n      this.notDuplicatedCities = [];\n      this.allNotDuplicatedCities = [];\n      this.places = [];\n      this.allCities = [];\n      this.listOfText = [];\n      this.markers = [];\n      this.text = '';\n      this.msg = \"\";\n      this.fileName = \"\";\n      this.listOfDate = [];\n      this.listOfText = []; // this.rangevalue = 0\n\n      this.onCartographier = true;\n      if (this.map) this.map.remove();\n      this.createMap();\n    }\n\n    sendToSpacy(event) {\n      this.notDuplicatedCities = [];\n      this.foundCities = [];\n      this.msg = \"\";\n\n      if (this.textArea) {\n        if (this.text != \"\") {\n          this.http.get(`${environment.url_py}/text`, {\n            params: {\n              text: this.text\n            }\n          }).subscribe(res => {\n            this.spacyList = res;\n            this.identifyCity(this.spacyList);\n          });\n        }\n      }\n\n      if (this.uploadFile) {\n        this.clearText();\n        const file = event.target.files[0]; // console.log('file ', file)\n\n        if (file) {\n          this.fileName = file.name;\n          const formData = new FormData();\n          formData.append(\"name\", file.name);\n          formData.append(\"file\", file, file.name); // Send file to Spacy and get response\n\n          this.http.post(`${environment.url_py}/file`, formData).subscribe(res => {\n            this.spacyList = res; // Récuperer les noms des fichiers traités\n\n            this.spacyList = this.spacyList.map(item => {\n              let splitUrl = item.fileName.split(\"/\");\n              item.fileName = splitUrl[splitUrl.length - 1];\n              return item;\n            }); // Regrouper les noms des fichiers dans la liste listOfText\n\n            this.groupeByList = this.groupBy(this.spacyList, item => item.fileName);\n            console.log(\"this.groupeByList is \", this.groupeByList);\n\n            for (let key of this.groupeByList) {\n              let item = {\n                legend: key[0],\n                value: key[1][0].fileDate\n              };\n              this.listOfText.push(item);\n            }\n\n            console.log(\"listOfText    **** ++++ *** \", this.listOfText); // Regrouper les noms des fichiers dans la liste listOfText\n\n            this.groupeByList = this.groupBy(this.spacyList, item => item.fileDate);\n            console.log(\"this.groupeByList is \", this.groupeByList);\n\n            for (let key of this.groupeByList) {\n              let item = {\n                value: key[0]\n              };\n              this.listOfDate.push(item);\n            }\n\n            this.listOfDate = this.listOfDate.sort((a, b) => {\n              if (parseInt(a.value) > parseInt(b.value)) return 1;\n              if (parseInt(a.value) < parseInt(b.value)) return -1;\n              return 0;\n            });\n            this.options.stepsArray = this.listOfDate;\n            console.log(\"listOfDate    **** ++++ *** \", this.options.stepsArray);\n            this.identifyCity(this.spacyList);\n          });\n        }\n      }\n    }\n\n    identifyCity(list = []) {\n      const spacyLoc = list.map(entity => {\n        return entity.city;\n      }); // convertir la liste des lieux en une chaîne de caractères\n\n      this.spacyText = spacyLoc.toString();\n\n      if (this.spacyText != \"\") {\n        // Itérer la liste des locations et chercher si une ville est existe dans la chaîne de caractères\n        this.locations.map(location => {\n          let cityRegex = new RegExp(\"\\\\b\" + location.city + \"\\\\b\");\n\n          if (this.spacyText.match(new RegExp(cityRegex, 'g'))) {\n            this.foundCities.push(location);\n          }\n        });\n      } // Récupérer les lieux non identifiés et les mettre dans une liste notFoundCities\n\n\n      list.map(item => {\n        if (!this.foundCities.find(location => location.city === item.city)) {\n          this.notFoundCities.push(item);\n        }\n      }); // ####################################################\n      // récupérer les lieux dupliqués et les mettre dans la list repeatedCities\n\n      let ids = {};\n      let repeatedCities = [];\n      this.foundCities.forEach(val => {\n        if (ids[val.city]) {\n          repeatedCities.push(val.city);\n        } else {\n          ids[val.city] = true;\n        }\n      }); // Recupérer les villes non dupliqueés et les mettre dans la liste notDuplicatedCities\n      // et les villes dupliqueés dans la liste duplicatedCities\n\n      this.foundCities.map(location => {\n        if (!repeatedCities.find(city => city === location.city)) {\n          this.notDuplicatedCities.push(location);\n        } else this.duplicatedCities.push(location);\n      }); // ####################################################\n      // Afficher les villes non dupliquées\n\n      if (this.notDuplicatedCities.length > 0) {\n        // this.clusters = L.markerClusterGroup({});\n        this.places = this.notDuplicatedCities;\n        this.displayOnMap();\n      } else this.msg = \"Aucun lieu trouvé !!!\";\n\n      list.forEach(item => {\n        this.notDuplicatedCities.forEach(location => {\n          if (item.city === location.city) {\n            item.lat = location.lat;\n            item.lng = location.lng;\n            item.country = location.country;\n            this.allNotDuplicatedCities.push(item);\n          }\n        });\n      });\n    }\n\n    confirmLocation(event, id) {\n      this.onCenter = false;\n\n      if (event.target.checked) {\n        let loc = this.locations.filter(location => {\n          return location.id === parseInt(id);\n        });\n        console.log(loc[0]);\n        console.log(this.places);\n        this.places.push(loc[0]);\n        console.log(this.places);\n      }\n\n      if (!event.target.checked) {\n        this.places = this.places.filter(location => location.id !== parseInt(id));\n      }\n    }\n\n    displayOnMap() {\n      console.log(\"on center = \", this.onCenter); // this.onCenter = true\n\n      this.places.map(location => {\n        // return location.occurence = this.wordList.filter(word => word === location.city).length\n        return location.occurence = this.spacyList.filter(item => item.city.match(\"\\\\b\" + location.city + \"\\\\b\")).length;\n      });\n      this.markers = [];\n      if (this.clusters) this.clusters.clearLayers(); // this.map.removeLayer(this.clusters)\n\n      this.getMarkers(this.places);\n    } // Cette methode va regrouper la liste selon le nom du fichier\n\n\n    groupBy(list, keyGetter) {\n      const map = new Map();\n      list.forEach(item => {\n        const key = keyGetter(item);\n        const collection = map.get(key);\n\n        if (!collection) {\n          map.set(key, [item]);\n        } else {\n          collection.push(item);\n        }\n      });\n      return map;\n    } //  Cette methode pour recentrer la carte selon les markers en cliquant sur le bouton centrer\n\n\n    onSelectText(text) {\n      console.log(\"on center = \", this.onCenter);\n      console.log(\"text selected \", this.textSelected);\n      console.log(\"date  \", text);\n      this.onCenter = true; // this.dateSelected = date\n\n      this.textSelected = text;\n      let arr = [];\n      this.allNotDuplicatedCities.filter(place => {\n        if (place.fileName === this.textSelected) arr.push(place);\n      }); // Récupérer l'occurence de chaque lieu\n\n      arr.map(location => {\n        return location.occurence = this.spacyList.filter(item => item.city.match(\"\\\\b\" + location.city + \"\\\\b\")).length;\n      });\n      console.log(arr);\n      this.clusters.clearLayers();\n      this.getMarkers(arr);\n    }\n\n    onSelectDate(date) {\n      console.log(\"text selected \", this.dateSelected);\n      console.log(\"date  \", date);\n      this.onCenter = false;\n      this.dateSelected = date; // this.textSelected = text\n\n      let arr = [];\n      this.allNotDuplicatedCities.filter(place => {\n        if (place.fileDate === this.dateSelected) arr.push(place);\n      }); // Récupérer l'occurence de chaque lieu\n\n      arr.map(location => {\n        return location.occurence = this.spacyList.filter(item => item.city.match(\"\\\\b\" + location.city + \"\\\\b\")).length;\n      });\n      console.log(arr);\n      this.clusters.clearLayers();\n      this.getMarkers(arr);\n    } // Cette methode est pour ajouter les markers sur la carte\n\n\n    getMarkers(arr = []) {\n      this.markers = [];\n      if (this.map) this.map.remove();\n      this.createMap();\n      this.clusters = L.markerClusterGroup({});\n      let iconSize;\n      arr.map(location => {\n        if (this.onCenter) iconSize = 20;else iconSize = 20 + location.occurence;\n        this.marker = L.marker([location.lat, location.lng], {\n          icon: new L.Icon({\n            iconUrl: 'assets/icons/circle_blue.png',\n            // iconUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-icon.png',\n            iconRetinaUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-icon-2x.png',\n            iconSize: [iconSize, iconSize],\n            iconAnchor: [6, 10],\n            popupAnchor: [5, -10],\n            html: \"<h1>hello</h1>\"\n          })\n        });\n        this.marker.bindPopup(`<center><span>${location.city}</span><span> - </span><span>${location.country}</span></center><br><center><span>- ${location.occurence} -</span></center>`);\n        this.markers.push(this.marker); // this.map.setView([location.lat, location.lng],5)\n\n        this.clusters.addLayer(this.marker);\n        this.map.addLayer(this.clusters);\n      }); // Contenir tous les markers sur la carte\n\n      if (this.markers.length > 1) {\n        this.bounds = L.featureGroup(this.markers);\n        this.map.fitBounds(this.bounds.getBounds(), {\n          padding: [0, 0]\n        });\n      }\n    }\n\n  }\n\n  MapComponent.ɵfac = function MapComponent_Factory(t) {\n    return new (t || MapComponent)(i0.ɵɵdirectiveInject(i1.DataService), i0.ɵɵdirectiveInject(i2.HttpClient), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  MapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MapComponent,\n    selectors: [[\"app-map\"]],\n    decls: 26,\n    vars: 11,\n    consts: [[\"class\", \"spinner\", 4, \"ngIf\"], [1, \"row\", \"content\"], [1, \"col-3\", \"p-2\"], [1, \"row\", \"inputs\"], [1, \"col\"], [1, \"d-flex\", \"justify-content-around\", \"mb-3\"], [\"for\", \"saisir_text\", 1, \"primary\", \"p-2\", \"rounded\"], [\"type\", \"radio\", \"checked\", \"\", \"name\", \"optradio\", \"id\", \"saisir_text\", \"mat-raised-button\", \"\", 2, \"margin-right\", \"5px\", 3, \"click\"], [\"for\", \"upload_file\", 1, \"primary\", \"p-2\", \"rounded\"], [\"type\", \"radio\", \"name\", \"optradio\", \"id\", \"upload_file\", 2, \"margin-right\", \"5px\", 3, \"click\"], [\"class\", \"textArea\", 4, \"ngIf\"], [\"style\", \"cursor: pointer;\", 4, \"ngIf\"], [1, \"text-center\", \"danger\", \"rounded\", \"my-1\", \"msg\"], [1, \"row\", \"lieuList\"], [\"class\", \"col-7 py-3\", 4, \"ngIf\"], [\"class\", \"col-5 py-3\", 4, \"ngIf\"], [1, \"col-9\"], [\"id\", \"map\", 1, \"row\"], [\"color\", \"light\", \"mat-mini-fab\", \"\", \"class\", \"center-button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"row slider d-flex items-align-center\", 4, \"ngIf\"], [1, \"spinner\"], [1, \"textArea\"], [\"placeholder\", \"Saisir un texte (10000 caract\\u00E8res maximum) ...\", \"rows\", \"5\", \"maxlength\", \"8000\", 1, \"rounded\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-around\", \"align-items-center\"], [\"mat-raised-button\", \"\", \"class\", \"primary\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", \"class\", \"danger\", 3, \"click\", 4, \"ngIf\"], [\"mat-raised-button\", \"\", 1, \"primary\", 3, \"click\"], [\"mat-raised-button\", \"\", 1, \"danger\", 3, \"click\"], [2, \"cursor\", \"pointer\"], [\"for\", \"fileDropReff\", 1, \"dropzone\", \"mat-elevation-z8\", \"info\", 2, \"cursor\", \"pointer\"], [\"src\", \"assets/icons/upload.png\", \"width\", \"100\", \"alt\", \"\", 1, \"mb-1\"], [\"type\", \"file\", \"accept\", \".txt,.zip\", \"id\", \"fileDropReff\", 1, \"mt-5\", 3, \"change\"], [\"myInput\", \"\"], [1, \"warning\", \"px-2\", \"rounded\"], [1, \"col-7\", \"py-3\"], [1, \"text-center\", \"white\", \"mb-2\", \"mat-elevation-z8\", \"rounded\", \"py-2\", 2, \"display\", \"block\", \"margin\", \"auto\", \"width\", \"100%\"], [3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", 1, \"primary\", 2, \"display\", \"block\", \"margin\", \"auto\", \"width\", \"100%\", 3, \"click\"], [1, \"warning\", \"p-2\", \"my-3\", \"rounded\", \"mat-elevation-z8\", 2, \"display\", \"block\", \"margin\", \"auto\", \"width\", \"100%\", \"margin-bottom\", \"5px\", 3, \"for\"], [\"type\", \"checkbox\", 3, \"id\", \"click\"], [1, \"ml-1\"], [1, \"col-5\", \"py-3\"], [\"class\", \"my-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"my-3\"], [1, \"danger\", \"p-2\", \"my-3\", \"rounded\", \"mat-elevation-z8\", \"w-100\", \"d-block\"], [\"color\", \"light\", \"mat-mini-fab\", \"\", 1, \"center-button\", 3, \"click\"], [1, \"row\", \"slider\", \"d-flex\", \"items-align-center\"], [1, \"col\", \"mt-1\"], [\"class\", \"row mb-1\", \"style\", \"width: 90%;\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"row\", \"mb-1\", 2, \"width\", \"90%\"], [\"mat-raised-button\", \"\", \"class\", \"light mx-1\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"mat-raised-button\", \"\", 1, \"light\", \"mx-1\", 3, \"click\"], [3, \"value\", \"options\", \"ngModel\", \"valueChange\", \"ngModelChange\", \"mouseup\"]],\n    template: function MapComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, MapComponent_div_0_Template, 1, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"label\", 6);\n        i0.ɵɵelementStart(7, \"input\", 7);\n        i0.ɵɵlistener(\"click\", function MapComponent_Template_input_click_7_listener($event) {\n          return ctx.onSelectTextArea($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(8, \"Saisir un texte\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"label\", 8);\n        i0.ɵɵelementStart(10, \"input\", 9);\n        i0.ɵɵlistener(\"click\", function MapComponent_Template_input_click_10_listener($event) {\n          return ctx.onSelectUploadFile($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(11, \"Charger un fichier\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, MapComponent_div_12_Template, 6, 3, \"div\", 10);\n        i0.ɵɵtemplate(13, MapComponent_div_13_Template, 11, 1, \"div\", 11);\n        i0.ɵɵelementStart(14, \"h4\", 12);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵtemplate(17, MapComponent_div_17_Template, 1, 0, \"div\", 0);\n        i0.ɵɵtemplate(18, MapComponent_div_18_Template, 7, 5, \"div\", 14);\n        i0.ɵɵtemplate(19, MapComponent_div_19_Template, 5, 5, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 16);\n        i0.ɵɵelementStart(21, \"div\", 17);\n        i0.ɵɵtemplate(22, MapComponent_button_22_Template, 3, 0, \"button\", 18);\n        i0.ɵɵtemplate(23, MapComponent_button_23_Template, 3, 0, \"button\", 18);\n        i0.ɵɵtemplate(24, MapComponent_button_24_Template, 3, 0, \"button\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, MapComponent_div_25_Template, 4, 2, \"div\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngIf\", ctx.textArea);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.uploadFile);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.msg);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundCities.length === 0 && ctx.fileName != \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.duplicatedCities.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.notFoundCities.length > 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundCities.length > 0 && ctx.onCenter && !ctx.textArea);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundCities.length > 0 && !ctx.onCenter && !ctx.textArea);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundCities.length > 0 && !ctx.onCenter && ctx.textArea);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.foundCities.length > 0);\n      }\n    },\n    directives: [i4.NgIf, i5.DefaultValueAccessor, i5.MaxLengthValidator, i5.NgControlStatus, i5.NgModel, i6.MatButton, i4.NgClass, i7.DefaultClassDirective, i4.NgForOf, i8.MatIcon, i9.ɵa],\n    styles: [\".spinner[_ngcontent-%COMP%]{border:8px solid silver;border-top:8px solid #337AB7;border-radius:50%;width:40px;height:40px;animation:spin .7s linear infinite;top:50%;left:50%;position:absolute;z-index:100}.content[_ngcontent-%COMP%]{height:93vh;padding-left:15px;padding-right:18px;padding-top:15px}.height1[_ngcontent-%COMP%]{height:40vh;overflow-y:scroll;width:100%;margin:auto auto 10px}.height2[_ngcontent-%COMP%]{height:40vh;overflow-y:scroll;width:100%;margin:auto auto 10px}.height1[_ngcontent-%COMP%]::-webkit-scrollbar{width:1px}.height2[_ngcontent-%COMP%]::-webkit-scrollbar{width:1px}.slider[_ngcontent-%COMP%]{height:16vh}.dropzone[_ngcontent-%COMP%]{width:100%;height:25vh;position:relative;display:flex;flex-direction:column;justify-content:center;align-items:center;margin-bottom:10px}.dropzone[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100px}.textArea[_ngcontent-%COMP%]{width:100%;height:25vh}input[type=radio][_ngcontent-%COMP%]:checked:after{width:15px;height:15px;border-radius:15px;top:-2px;left:-1px;position:relative;background-color:#ffc107;content:\\\"\\\";display:inline-block;visibility:visible}#fileDropReff[_ngcontent-%COMP%]{opacity:0;position:absolute;z-index:2;width:80%;height:5vh;top:0;left:0;cursor:pointer}@keyframes spin{0%{transform:rotate(0)}to{transform:rotate(-360deg)}}#map[_ngcontent-%COMP%]{position:relative;border:#17A2B8 1px solid;height:77vh}.center-button[_ngcontent-%COMP%]{position:absolute;top:6px;right:6px;z-index:1000}textarea[_ngcontent-%COMP%]{width:100%;padding:10px;height:18vh;border:none;box-shadow:#fff3 0 0 0 1px inset,#000000e6 0 0 0 1px;margin-bottom:10px}h3[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], label[_ngcontent-%COMP%]{padding:0;margin:0}.number-icon[_ngcontent-%COMP%]{width:24px!important;height:24px!important;margin-left:-12px;margin-top:-12px;border-radius:18px;border:2px solid #3F51B5;text-align:center;color:#3f51b5;background-color:red;font-size:16px;z-index:10000}\"]\n  });\n  return MapComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}